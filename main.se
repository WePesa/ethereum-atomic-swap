macro verify_sign($hash, $addr, $signature):
    v=$signature[0]
    r=$signature[1]
    s=$signature[2]
    $addr==ecrecover($hash, v, r, s)

data channel[](addr1, addr2, expiration, amount)
macro db():
    self.channel[hash]
macro db_cleanup():
    db().addr1=0
    db().addr2=0
    db().expiration=0
    db().amount=0

def spend(hash, addr1, addr2, sig1:arr, sig2:arr, expiration):#from 1 towards 2
    h=sha256([hash, expiration]:arr)
    log(h)
    if not verify_sign(h, addr1, sig1):
        return("fail")
    if not verify_sign(h, addr2, sig2):
        return("fail")
    if not db().addr2:#wait until cleanup to start a new spend.
        return("fail")
    db().addr1=addr1
    db().addr2=addr2
    db().expiration=expiration
    db().amount=msg.value
    log(55555)

def team_claim(hash, sig1:arr, sig2:arr, winner):
    addr1=db().addr1
    addr2=db().addr2
    if not verify_sign(hash, addr1, sig1):
        return("fail")
    if not verify_sign(hash+winner, addr2, sig2):
        return("fail")
    if winner:
        send(addr2, db().amount)
    else:
        send(addr1, db().amount)
    db_cleanup()

def expired_claim(hash):
    addr1=db().addr1
    if db().expiration<block.number:
        return("fail")
    send(addr1, db().amount)
    db_cleanup()

def reveal_claim(reveal):
    addr2=db().addr2
    if not sha256([reveal]:arr)==h:
        return("fail")
    send(addr2, db().amount)
    db_cleanup()
    log(555)
